"""
ProjectEuler: Problem #12 "Highly Divisible Triangular Number"
solved using Python by Michael Hillendahl

PROMPT

The sequence of triangle numbers is generated by adding
the natural numbers. So the 7th triangle number would be

[code language="python"]1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.[/code]

The first ten terms would be:

[code language="python"]1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...[/code]

Let us list the factors of the first seven triangle numbers:

[code language="python"]
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
[/code]

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""

# SOLUTION
import math #for sqrt function

def divs(x) :
    num=0
    for i in range(1,int(math.sqrt(x))+1) :
        if x%i==0 : num+=2
    if math.sqrt(x)==int(math.sqrt(x)) : num+=1
    return num

def solve(x) :
    i=0; tri=0
    while(1) :
        i+=1; tri+=i
        if divs(tri)>x : return tri

print solve(500)
#print divs(8)